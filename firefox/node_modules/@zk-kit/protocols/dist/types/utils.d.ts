import { IncrementalMerkleTree, MerkleProof } from "@zk-kit/incremental-merkle-tree";
import { ZqField } from "ffjavascript";
import { StrBigInt } from "./types";
export declare const SNARK_FIELD_SIZE: bigint;
export declare const Fq: ZqField;
export declare function genSignalHash(signal: string): bigint;
export declare function genExternalNullifier(plaintext: string): string;
/**
 * Creates a Merkle tree.
 * @param depth The depth of the tree.
 * @param zeroValue The zero value of the tree.
 * @param arity The number of leaves per node.
 * @param leaves The list of the leaves of the tree.
 * @returns The Merkle tree.
 */
export declare function generateMerkleTree(depth: number, zeroValue: StrBigInt, arity: number, leaves: StrBigInt[]): IncrementalMerkleTree;
/**
 * Creates a Merkle proof.
 * @param depth The depth of the tree.
 * @param zeroValue The zero value of the tree.
 * @param arity The number of leaves per node.
 * @param leaves The list of the leaves of the tree.
 * @param leafIndex The leaf index for which Merkle proof should be created.
 * @returns The Merkle proof.
 */
export declare function generateMerkleProof(depth: number, zeroValue: StrBigInt, arity: number, leaves: StrBigInt[], leaf: StrBigInt): MerkleProof;
